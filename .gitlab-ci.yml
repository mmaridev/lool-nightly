stages:
  - binary
  - docker


bin:
  stage: binary
  image: debian:stable-backports
  before_script:
    - grep -e '^deb ' /etc/apt/sources.list | sed -e 's/deb /deb-src /g' >> /etc/apt/sources.list
    - apt update -qq
    - DEBIAN_FRONTEND=noninteractive apt-get install -y git build-essential devscripts libkrb5-dev openssl g++ libssl-dev libcap-dev libtool m4 automake libcppunit-dev libcppunit-doc pkg-config python-polib python3-polib default-jre libpam-dev npm python-lxml python3-lxml translate-toolkit docker.io locales-all libpng16-16 fontconfig adduser cpio findutils nano libpoco-dev libcap2-bin openssl inotify-tools procps libubsan1 sudo
    - apt-get build-dep -y libreoffice
    - npm i npm@latest -g
    - "git ls-remote https://git.libreoffice.org/core | cut -f 2 | grep -e '^refs/heads/libreoffice' | tail -1 | rev | cut -d '/' -f 1 | rev > core-branch"
    - "git ls-remote https://git.libreoffice.org/online | cut -f 2 | grep -e '^refs/heads/libreoffice' | tail -1 | rev | cut -d '/' -f 1 | rev > online-branch"
    - useradd -s /bin/bash lool
    - "echo 'lool ALL=(ALL) NOPASSWD: /sbin/setcap' >> /etc/sudoers"
    - git clone --depth=1 https://git.libreoffice.org/online
  script:
    - cd online/docker; su -c 'LIBREOFFICE_BRANCH="$(cat ../../core-branch)" LIBREOFFICE_ONLINE_BRANCH="$(cat ../../online-branch)" NO_DOCKER_PUSH="yes" NO_DOCKER_IMAGE="yes" ONLINE_EXTRA_BUILD_OPTIONS="--enable-anonymization --with-max-connections=100000 --with-max-documents=100000 --with-app-branding=/home/lool/branding" ./l10n-docker-nightly.sh' lool
  artifacts:
    paths:
    - "*-branch"
    - online/docker/instdir


dock:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - cp Dockerfile_debian online/docker/Dockerfile
    - /kaniko/executor --context $CI_PROJECT_DIR/online/docker --dockerfile $CI_PROJECT_DIR/online/docker/Dockerfile --destination $CI_REGISTRY_IMAGE:$(cat $CI_PROJECT_DIR/online-branch)
